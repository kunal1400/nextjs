{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/nextjs/pages/p/[id].js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\nimport Layout from '../comps/Layout';\nimport Markdown from 'react-markdown';\n\nconst Post = props => __jsx(Layout, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, __jsx(\"h1\", {\n  className: \"jsx-1915290346\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, props.show.name), __jsx(\"p\", {\n  className: \"jsx-1915290346\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, props.show.summary.replace(/<[/]?[pb]>/g, '')), __jsx(\"img\", {\n  src: props.show.image.medium,\n  className: \"jsx-1915290346\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}), __jsx(\"div\", {\n  className: \"jsx-1915290346\" + \" \" + 'markdown',\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, __jsx(Markdown, {\n  source: `\n        This is our blog post.\n        Yes. We can have a [link](/link).\n        And we can have a title as well.\n\n        ### This is a title\n\n        And here's the content.\n            `,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n})), __jsx(_JSXStyle, {\n  id: \"1915290346\",\n  __self: this\n}, \".markdown{font-family:'Arial';}.markdown a{-webkit-text-decoration:none;text-decoration:none;color:blue;}.markdown a:hover{opacity:0.6;}.markdown h3{margin:0;padding:0;text-transform:uppercase;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3VzZXIvRG9jdW1lbnRzL25leHRqcy9wYWdlcy9wL1tpZF0uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBc0J3QixBQUcrQixBQUdDLEFBSVQsQUFHSCxTQUNDLEdBSFosT0FJMkIsQ0FYM0Isd0JBWUEsTUFUYSxXQUNiIiwiZmlsZSI6Ii9ob21lL3VzZXIvRG9jdW1lbnRzL25leHRqcy9wYWdlcy9wL1tpZF0uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZmV0Y2ggZnJvbSAnaXNvbW9ycGhpYy11bmZldGNoJ1xuaW1wb3J0IExheW91dCBmcm9tICcuLi9jb21wcy9MYXlvdXQnXG5pbXBvcnQgTWFya2Rvd24gZnJvbSAncmVhY3QtbWFya2Rvd24nXG5cbmNvbnN0IFBvc3QgPSBwcm9wcyA9PiAoXG4gIDxMYXlvdXQ+XG4gICAgPGgxPntwcm9wcy5zaG93Lm5hbWV9PC9oMT5cbiAgICA8cD57cHJvcHMuc2hvdy5zdW1tYXJ5LnJlcGxhY2UoLzxbL10/W3BiXT4vZywgJycpfTwvcD5cbiAgICA8aW1nIHNyYz17cHJvcHMuc2hvdy5pbWFnZS5tZWRpdW19IC8+XG4gICAgPGRpdiBjbGFzc05hbWU9J21hcmtkb3duJz5cbiAgICAgIDxNYXJrZG93blxuICAgICAgICBzb3VyY2U9e2BcbiAgICAgICAgVGhpcyBpcyBvdXIgYmxvZyBwb3N0LlxuICAgICAgICBZZXMuIFdlIGNhbiBoYXZlIGEgW2xpbmtdKC9saW5rKS5cbiAgICAgICAgQW5kIHdlIGNhbiBoYXZlIGEgdGl0bGUgYXMgd2VsbC5cblxuICAgICAgICAjIyMgVGhpcyBpcyBhIHRpdGxlXG5cbiAgICAgICAgQW5kIGhlcmUncyB0aGUgY29udGVudC5cbiAgICAgICAgICAgIGB9XG4gICAgICAvPlxuICAgIDwvZGl2PlxuICAgIDxzdHlsZSBqc3ggZ2xvYmFsPiB7YFxuICAgICAgLm1hcmtkb3duIHtcbiAgICAgICAgICBmb250LWZhbWlseTogJ0FyaWFsJztcbiAgICAgICAgfVxuICAgICAgICAubWFya2Rvd24gYSB7XG4gICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgICAgIGNvbG9yOiBibHVlO1xuICAgICAgICB9XG4gICAgICAgIC5tYXJrZG93biBhOmhvdmVyIHtcbiAgICAgICAgICBvcGFjaXR5OiAwLjY7XG4gICAgICAgIH1cbiAgICAgICAgLm1hcmtkb3duIGgzIHtcbiAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgcGFkZGluZzogMDtcbiAgICAgICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgICAgICB9XG4gICAgICBgfVxuICAgIDwvc3R5bGU+XG4gIDwvTGF5b3V0PlxuKVxuXG5Qb3N0LmdldEluaXRpYWxQcm9wcyA9IGFzeW5jIGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gIGNvbnN0IHsgaWQgfSA9IGNvbnRleHQucXVlcnlcbiAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goYGh0dHBzOi8vYXBpLnR2bWF6ZS5jb20vc2hvd3MvJHtpZH1gKVxuICBjb25zdCBzaG93ID0gYXdhaXQgcmVzLmpzb24oKVxuXG4gIGNvbnNvbGUubG9nKGBGZXRjaGVkIHNob3c6ICR7c2hvdy5uYW1lfWApXG5cbiAgcmV0dXJuIHsgc2hvdyB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFBvc3RcbiJdfQ== */\\n/*@ sourceURL=/home/user/Documents/nextjs/pages/p/[id].js */\"));\n\nPost.getInitialProps = async function (context) {\n  const {\n    id\n  } = context.query;\n  const res = await fetch(`https://api.tvmaze.com/shows/${id}`);\n  const show = await res.json();\n  console.log(`Fetched show: ${show.name}`);\n  return {\n    show\n  };\n};\n\nexport default Post;","map":{"version":3,"sources":["/home/user/Documents/nextjs/pages/p/[id].js"],"names":["fetch","Layout","Markdown","Post","props","show","name","summary","replace","image","medium","getInitialProps","context","id","query","res","json","console","log"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,QAAP,MAAqB,gBAArB;;AAEA,MAAMC,IAAI,GAAGC,KAAK,IAChB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKA,KAAK,CAACC,IAAN,CAAWC,IAAhB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAIF,KAAK,CAACC,IAAN,CAAWE,OAAX,CAAmBC,OAAnB,CAA2B,aAA3B,EAA0C,EAA1C,CAAJ,CAFF,EAGE;AAAK,EAAA,GAAG,EAAEJ,KAAK,CAACC,IAAN,CAAWI,KAAX,CAAiBC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHF,EAIE;AAAA,sCAAe,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,QAAD;AACE,EAAA,MAAM,EAAG;;;;;;;;aADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CAJF;AAAA;AAAA;AAAA,4xEADF;;AAuCAP,IAAI,CAACQ,eAAL,GAAuB,gBAAgBC,OAAhB,EAAyB;AAC9C,QAAM;AAAEC,IAAAA;AAAF,MAASD,OAAO,CAACE,KAAvB;AACA,QAAMC,GAAG,GAAG,MAAMf,KAAK,CAAE,gCAA+Ba,EAAG,EAApC,CAAvB;AACA,QAAMR,IAAI,GAAG,MAAMU,GAAG,CAACC,IAAJ,EAAnB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAa,iBAAgBb,IAAI,CAACC,IAAK,EAAvC;AAEA,SAAO;AAAED,IAAAA;AAAF,GAAP;AACD,CARD;;AAUA,eAAeF,IAAf","sourcesContent":["import fetch from 'isomorphic-unfetch'\nimport Layout from '../comps/Layout'\nimport Markdown from 'react-markdown'\n\nconst Post = props => (\n  <Layout>\n    <h1>{props.show.name}</h1>\n    <p>{props.show.summary.replace(/<[/]?[pb]>/g, '')}</p>\n    <img src={props.show.image.medium} />\n    <div className='markdown'>\n      <Markdown\n        source={`\n        This is our blog post.\n        Yes. We can have a [link](/link).\n        And we can have a title as well.\n\n        ### This is a title\n\n        And here's the content.\n            `}\n      />\n    </div>\n    <style jsx global> {`\n      .markdown {\n          font-family: 'Arial';\n        }\n        .markdown a {\n          text-decoration: none;\n          color: blue;\n        }\n        .markdown a:hover {\n          opacity: 0.6;\n        }\n        .markdown h3 {\n          margin: 0;\n          padding: 0;\n          text-transform: uppercase;\n        }\n      `}\n    </style>\n  </Layout>\n)\n\nPost.getInitialProps = async function (context) {\n  const { id } = context.query\n  const res = await fetch(`https://api.tvmaze.com/shows/${id}`)\n  const show = await res.json()\n\n  console.log(`Fetched show: ${show.name}`)\n\n  return { show }\n}\n\nexport default Post\n"]},"metadata":{},"sourceType":"module"}